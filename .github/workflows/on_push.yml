name: Checks on_push

on:
  push:
    branches:
      - "*"
    tags:
      - "!v*.*.*"
env:
  checkout_dir: "go/src/github.com/deogracia/jntpdn"
jobs:
  windows_test:
    name: windows-latest - tests
    runs-on: windows-latest
    steps:
    - name: run gosec
      run: |
          export GOPATH=$(go env GOPATH)
          export GO111MODULE=off
          go get github.com/securego/gosec/cmd/gosec
          PATH="$(go env GOPATH)\bin:$PATH"
          env |sort
          "$(go env GOPATH)\bin\gosec" --help
      shell: bash
  windows_checks:
    name: windows-latest - checks & build
    runs-on: windows-latest
    steps:
    - name: Define and add GOPATH to PATH
      run: |
          $INCLUDE = "c:\gopath\bin"
          $OLDPATH = [System.Environment]::GetEnvironmentVariable('PATH','machine')
          $NEWPATH = "$OLDPATH;$INCLUDE"
          [Environment]::SetEnvironmentVariable("PATH", "$NEWPATH", "Machine")
          ($env:PATH).split(";")
#          echo "c:\gopath\bin" >> ${GITHUB_PATH}
#          ($env:PATH).split(";")
#          echo "GOPATH=${GITHUB_WORKSPACE}/go" >> ${GITHUB_ENV}
#          setx PATH "$env:path;c:\gopath\bin" -m
#          dir env:
##          $AddedLocation ="c:\gopath\bin"
##          $Reg = "Registry::HKLM\System\CurrentControlSet\Control\Session Manager\Environment"
##          $OldPath = (Get-ItemProperty -Path "$Reg" -Name PATH).Path
##          $NewPath= $AddedLocation + ';' + $OldPath
##          Set-ItemProperty -Path "$Reg" -Name PATH –Value $NewPath
##          [Environment]::SetEnvironmentVariable("Path", $env:Path + ";C:\gopath\bin", [EnvironmentVariableTarget]::Machine)
##          setx PATH "$env:path;c:\gopath\bin" -m
##          echo "GOPATH=${GITHUB_WORKSPACE}/go" >> ${GITHUB_ENV}
##          echo "c:\gopath\bin" >> ${GITHUB_PATH}
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        path: "${{env.checkout_dir}}"
    - name: Run ci target
      run:  |
          ($env:PATH).split(";")
          cd c:\
          go get github.com/securego/gosec/cmd/gosec
          Get-Command gosec
          go get github.com/mitchellh/gox
          Get-Command gox
          $workspace = Join-Path -Path $Env:GITHUB_WORKSPACE -ChildPath $Env:checkout_dir
          Write-Output $workspace
          cd $workspace
          dir env:
          make ci_windows
#          setx PATH "$env:path;c:\gopath\bin" -m
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: windows-lastest - generated executables
        path: ${{ github.workspace }}/${{ env.checkout_dir }}/output
  others-os_checks:
    name: ${{ matrix.os }} - checks & build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - name: Define and add GOPATH to PATH
      run: |
          echo "GOPATH=${GITHUB_WORKSPACE}/go" >> ${GITHUB_ENV}
          echo "${GITHUB_WORKSPACE}/go/bin" >> ${GITHUB_PATH}
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        path: "${{env.checkout_dir}}"
    - name: Run ci target
      run: |
          go get github.com/securego/gosec/cmd/gosec
          go get github.com/mitchellh/gox
          cd $GITHUB_WORKSPACE/$checkout_dir
          make ci
    - name: Build BSD artefacts
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
          cd $GITHUB_WORKSPACE/$checkout_dir
          make build_bsd
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }} - generated executables
        path: ${{ github.workspace }}/${{ env.checkout_dir }}/output
